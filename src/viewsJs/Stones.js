import * as THREE from 'three';
import * as CANNON from 'cannon-es';
import {PWorld, PSphere, PJumpSphere, PPolyhedron, PBox } from '../PWorld/PObjects.js'
import { getDiceCubeMaterial, getEarthMaterial, getMeshWireMaterial } from '../PWorld/Scene/MeshMaterials.js'
import { BoxComposer } from '../PWorld/Tools/Composer.js';
import { rand } from 'three/tsl';


const world = new PWorld({
    cameraPosition: [1, 1, 1],
    // gravity: [0, -100, 0],
    useGround: true,
    groundSize: [20, 20],
    useWorldRadius: true,    
    worldRadius: 10,
    orbitControlDistance: [1, 20]
});

const data = {
    vertices: [[.5539,1.582,.2252],[.8996,-1.4294,-.0359],[-.7233,-1.0144,-.1538],[-.6033,1.2888,.2062],[.0929,2.2164,.5044],[.2905,-2.0223,.1214],[.2332,-2.1868,-.5908],[.0655,2.1738,.0313],[.2254,.1898,.5979],[.1259,.0624,-.3738],[-.7022,.0599,-.4032],[-.6648,.2676,.5427],[.3338,2.4557,.2873],[-.0753,2.313,.2687],[-.4307,1.437,-.0401],[-.2413,1.0383,-.2124],[.3178,1.6456,-.0221],[-.0895,-.5813,.6298],[-.4553,-1.1176,.2411],[-.0487,-2.2406,-.2933],[.7084,-2.4343,-.2545],[.6832,-1.4088,.316],[.2821,1.7093,.5065],[-.1927,1.1139,.6281],[-.4007,1.4838,.4793],[-.8464,.2676,.3232],[-.8676,.1498,-.1017],[-.5839,-1.2813,-.5318],[-.1912,-.8736,-.6356],[.6203,-1.5895,-.466],[.6515,.1305,-.0038],[.6877,.1532,.3757],[.4172,2.0438,.1709],[.5305,1.2646,.0496],[.664,.7257,.1933],[.5096,1.3018,.3585],[.4043,2.0668,.3618],[.8632,-1.9262,-.0044],[.8167,-1.022,.2525],[.7777,-.509,.1314],[.78,-1.1275,-.2044],[.8406,-1.9914,-.2868],[-.4613,-1.5873,-.0806],[-.5077,-1.6464,-.3597],[-.8259,-.7169,-.3257],[-.8996,-.1636,.0021],[-.7507,-.6213,.1259],[-.3647,1.7972,.1433],[-.6899,.986,.0389],[-.8675,.5208,.1645],[-.6723,1.0133,.3424],[-.3538,1.8141,.3309],[.1628,2.5,.3692],[-.1024,2.149,.4385],[-.1448,1.7161,.5683],[.0942,1.7994,.5792],[.2843,2.2839,.4561],[-.0872,-1.358,.3489],[-.0724,-1.9571,.0156],[.379,-2.4406,-.1677],[.6433,-2.1403,.0524],[.3551,-1.4712,.3716],[.3583,-2.5,-.4248],[.5999,-2.2649,-.4872],[.2751,-1.7013,-.6248],[-.1673,-1.5881,-.6475],[-.1158,-2.0817,-.5239],[.1529,2.4846,.1984],[-.1232,2.1168,.0801],[-.1831,1.6565,-.0936],[.0559,1.7399,-.0827],[.2636,2.2517,.0977],[.3127,-.6478,.6056],[.5502,-.4355,.5224],[.3933,.7967,.4939],[.0296,1.1441,.5985],[-.1662,.2256,.6475],[.0824,1.05,-.1825],[.3709,.7909,-.1188],[.4841,-.6143,-.3298],[.2199,-.9147,-.5498],[-.25,.0277,-.4781],[-.4792,.9178,-.1886],[-.5554,.0458,-.4744],[-.6175,-.7004,-.5942],[-.816,-.3313,-.4149],[-.7486,.544,-.1401],[-.4275,-.4585,.5476],[-.7346,-.0833,.4253],[-.7109,.619,.4606],[-.4348,.9868,.5789],[-.4812,.2347,.6133]],
    faces: [[32,0,33],[33,0,34],[34,0,35],[35,0,36],[36,0,32],[37,1,38],[38,1,39],[39,1,40],[40,1,41],[41,1,37],[42,2,43],[43,2,44],[44,2,45],[45,2,46],[46,2,42],[3,47,48],[3,48,49],[3,49,50],[3,50,51],[3,51,47],[4,52,53],[4,53,54],[4,54,55],[4,55,56],[4,56,52],[5,57,58],[5,58,59],[5,59,60],[5,60,61],[5,61,57],[62,6,63],[63,6,64],[64,6,65],[65,6,66],[66,6,62],[67,7,68],[68,7,69],[69,7,70],[70,7,71],[71,7,67],[8,72,73],[8,73,74],[8,74,75],[8,75,76],[8,76,72],[9,77,78],[9,78,79],[9,79,80],[9,80,81],[9,81,77],[10,82,83],[10,83,84],[10,84,85],[10,85,86],[10,86,82],[87,11,88],[88,11,89],[89,11,90],[90,11,91],[91,11,87],[32,12,36],[36,12,56],[56,12,52],[52,12,67],[67,12,71],[71,12,32],[13,47,51],[13,51,53],[13,53,52],[13,52,67],[13,67,68],[13,68,47],[47,14,48],[48,14,86],[86,14,82],[82,14,69],[69,14,68],[68,14,47],[15,69,70],[15,70,77],[15,77,81],[15,81,83],[15,83,82],[15,82,69],[16,32,33],[16,33,78],[16,78,77],[16,77,70],[16,70,71],[16,71,32],[17,57,61],[17,61,72],[17,72,76],[17,76,91],[17,91,87],[17,87,57],[42,18,46],[46,18,88],[88,18,87],[87,18,57],[57,18,58],[58,18,42],[19,42,43],[19,43,66],[19,66,62],[19,62,59],[19,59,58],[19,58,42],[37,20,41],[41,20,63],[63,20,62],[62,20,59],[59,20,60],[60,20,37],[21,37,38],[21,38,73],[21,73,72],[21,72,61],[21,61,60],[21,60,37],[22,35,36],[22,36,56],[22,56,55],[22,55,75],[22,75,74],[22,74,35],[54,23,55],[55,23,75],[75,23,76],[76,23,91],[91,23,90],[90,23,54],[50,24,51],[51,24,53],[53,24,54],[54,24,90],[90,24,89],[89,24,50],[25,45,46],[25,46,88],[25,88,89],[25,89,50],[25,50,49],[25,49,45],[26,44,45],[26,45,49],[26,49,48],[26,48,86],[26,86,85],[26,85,44],[27,43,44],[27,44,85],[27,85,84],[27,84,65],[27,65,66],[27,66,43],[28,64,65],[28,65,84],[28,84,83],[28,83,81],[28,81,80],[28,80,64],[29,40,41],[29,41,63],[29,63,64],[29,64,80],[29,80,79],[29,79,40],[30,33,34],[30,34,39],[30,39,40],[30,40,79],[30,79,78],[30,78,33],[31,34,35],[31,35,74],[31,74,73],[31,73,38],[31,38,39],[31,39,34]]
}

// one body - one mesh
const objects = [
    new PPolyhedron({
        static: false,
        mass: 1,
        position: [3, 3, 3],
        color: 0xff0000,
        meshMaterialFn: getMeshWireMaterial,
        ...data
    }),
    new PPolyhedron({
        static: false,
        mass: 1,
        position: [0, 5, 0],
        color: 0xff0000,
        meshMaterialFn: getMeshWireMaterial,
        ...data
    }),
    new PPolyhedron({
        static: false,
        mass: 1,
        position: [-3, 3, -3],
        color: 0xff0000,
        meshMaterialFn: getMeshWireMaterial,
        ...data
    }),
    new PBox({
        size: [5, 5, 2]
    }),
    new PBox({
        size: [5, 5, 2]
    }),
];

world.init(objects);

document.getElementById("btnBum").addEventListener("click", event => { 
    world.getInstancesOf(PPolyhedron).forEach(o => {
        o.body.applyForce(new CANNON.Vec3(0, 1000*Math.random(), 0))
        o.body.applyTorque(new CANNON.Vec3(10*Math.random(), 10*Math.random(), 10*Math.random()))
    })
});

// Animation loop
function animate() {
    world.update();
    requestAnimationFrame(animate);
}

animate();
